name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 18

jobs:
  lint:
    name: Lint files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: "Tests"
    needs: [lint]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: yarn test:ember
        env:
          CI: true

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install Dependencies
        run: yarn install --no-lockfile
      - name: Run Tests
        run: yarn test

  try-scenarios:
    name: ${{ matrix.try-scenario }}
    runs-on: ubuntu-latest
    needs: 'test'
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28,
          - ember-lts-4.12
          - ember-lts-5.4
          - ember-release
          # - ember-beta
          # - ember-canary
          - embroider-safe
          - embroider-optimized

    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }} --skip-cleanup --config-path='config/ember-try.js'
        working-directory: test-app

  publish:
    name: Publish to npm
    needs: [lint, test, try-scenarios]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run auto-dist-tag
        run: npx auto-dist-tag@1 --write
        working-directory: reactive-load-script

      - name: Publish
        run: npm publish
        working-directory: reactive-load-script
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

